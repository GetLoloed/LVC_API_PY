name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Connect to VPN
      uses: kota65535/github-openvpn-connect-action@v2
      with:
        config_file: .github/workflows/client.ovpn
        username: ${{ secrets.VPN_USERNAME }}
        password: ${{ secrets.VPN_PASSWORD }}
        client_key: ${{ secrets.USER_KEY }}

    - name: Verify VPN connection
      run: |
        ip a
        sudo tail -n 100 /var/log/syslog

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "mkdir -p /home/alt/tp_api"
        scp -r ./tp_api/* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/home/alt/tp_api/
      env:
        SSH_PASS: ${{ secrets.SERVER_PASSWORD }}

    env:
      pythonLocation: /opt/hostedtoolcache/Python/3.10.14/x64
      LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.10.14/x64/lib
      VPN_USERNAME: ${{ secrets.VPN_USERNAME }}
      VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
      SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
