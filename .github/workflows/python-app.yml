# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Install OpenVPN
      run: |
        sudo apt-get update
        sudo apt-get install -y openvpn

    - name: Setup VPN
      run: |
        echo "${{ secrets.VPN_CONFIG }}" > vpn-config.ovpn
        sudo openvpn --config vpn-config.ovpn &
      env:
        VPN_CONFIG: ${{ secrets.VPN_CONFIG }}

    - name: Wait for VPN connection
      run: sleep 15

    - name: Deploy to server
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 10.17.10.4 >> ~/.ssh/known_hosts
        scp -o StrictHostKeyChecking=no -r ./path/to/build user@10.17.10.4:/path/to/deploy
